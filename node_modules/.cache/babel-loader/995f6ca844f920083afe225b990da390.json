{"ast":null,"code":"var _jsxFileName = \"/Users/mathildedescamps/Documents/Professionnel/Alternance/openclassrooms/P6/fisheye/src/components/Medias.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Medias(props) {\n  _s();\n\n  let medias = props.medias;\n  let mediaFolder = props.name.split(\" \")[0]; // IMAGES ARRAY :\n\n  let images = []; //State that defines whether the lightbox is displayed or not :\n\n  const [lightboxDisplay, setLightBoxDisplay] = useState(false); //State that defines which image has to be displayed : \n\n  const [imageToShow, setImageToShow] = useState('');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery\",\n      children: [medias.map((media, index) => {\n        if (media.image) {\n          images.push(process.env.PUBLIC_URL + '/' + mediaFolder + '/' + media.image);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"media\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: process.env.PUBLIC_URL + '/' + mediaFolder + '/' + media.image,\n              alt: media.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 33\n          }, this);\n        } else if (media.video) {\n          images.push(process.env.PUBLIC_URL + '/' + mediaFolder + '/' + media.video);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"media\",\n            children: /*#__PURE__*/_jsxDEV(\"video\", {\n              autoPlay: true,\n              muted: true,\n              controls: true,\n              height: \"300\",\n              children: [/*#__PURE__*/_jsxDEV(\"source\", {\n                src: process.env.PUBLIC_URL + '/' + mediaFolder + '/' + media.video,\n                type: \"video/mp4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 41\n              }, this), \"Sorry, your browser doesn't support embedded videos.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 33\n          }, this);\n        }\n      }), console.log(images)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), lightboxDisplay ? /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"lightbox\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"lightbox-img\",\n        src: imageToShow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this) : '']\n  }, void 0, true);\n}\n\n_s(Medias, \"4QP5M+l7/Ww50I4+eiUa0ocNC20=\");\n\n_c = Medias;\nexport default Medias;\n\nvar _c;\n\n$RefreshReg$(_c, \"Medias\");","map":{"version":3,"sources":["/Users/mathildedescamps/Documents/Professionnel/Alternance/openclassrooms/P6/fisheye/src/components/Medias.js"],"names":["useState","Medias","props","medias","mediaFolder","name","split","images","lightboxDisplay","setLightBoxDisplay","imageToShow","setImageToShow","map","media","index","image","push","process","env","PUBLIC_URL","video","console","log"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAEnB,MAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;AACA,MAAIC,WAAW,GAAGF,KAAK,CAACG,IAAN,CAAWC,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAAlB,CAHmB,CAInB;;AACA,MAAIC,MAAM,GAAG,EAAb,CALmB,CAMnB;;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,KAAD,CAAtD,CAPmB,CAQnB;;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;AAEA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,iBAEQG,MAAM,CAACS,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAiB;AACxB,YAAGD,KAAK,CAACE,KAAT,EAAgB;AACZR,UAAAA,MAAM,CAACS,IAAP,CAAYC,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,GAAzB,GAA+Bf,WAA/B,GAA6C,GAA7C,GAAkDS,KAAK,CAACE,KAApE;AACA,8BACI;AAAiB,YAAA,SAAS,EAAC,OAA3B;AAAA,mCACI;AAAK,cAAA,GAAG,EAAEE,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,GAAzB,GAA+Bf,WAA/B,GAA6C,GAA7C,GAAkDS,KAAK,CAACE,KAAlE;AAAyE,cAAA,GAAG,EAAEF,KAAK,CAACE;AAApF;AAAA;AAAA;AAAA;AAAA;AADJ,aAAUD,KAAV;AAAA;AAAA;AAAA;AAAA,kBADJ;AAKH,SAPD,MAOO,IAAGD,KAAK,CAACO,KAAT,EAAgB;AACnBb,UAAAA,MAAM,CAACS,IAAP,CAAYC,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,GAAzB,GAA+Bf,WAA/B,GAA6C,GAA7C,GAAkDS,KAAK,CAACO,KAApE;AACA,8BACI;AAAiB,YAAA,SAAS,EAAC,OAA3B;AAAA,mCACI;AAAO,cAAA,QAAQ,MAAf;AAAgB,cAAA,KAAK,MAArB;AAAsB,cAAA,QAAQ,MAA9B;AAA+B,cAAA,MAAM,EAAC,KAAtC;AAAA,sCACI;AAAQ,gBAAA,GAAG,EAAEH,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,GAAzB,GAA+Bf,WAA/B,GAA6C,GAA7C,GAAmDS,KAAK,CAACO,KAAtE;AAA6E,gBAAA,IAAI,EAAC;AAAlF;AAAA;AAAA;AAAA;AAAA,sBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,aAAUN,KAAV;AAAA;AAAA;AAAA;AAAA,kBADJ;AAQH;AACJ,OAnBD,CAFR,EAuBKO,OAAO,CAACC,GAAR,CAAYf,MAAZ,CAvBL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EA0BMC,eAAe,gBACb;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA,6BACI;AAAK,QAAA,EAAE,EAAC,cAAR;AAAuB,QAAA,GAAG,EAAEE;AAA5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADa,GAIf,EA9BN;AAAA,kBADJ;AAkCH;;GA7CQT,M;;KAAAA,M;AA+CT,eAAeA,MAAf","sourcesContent":["import { useState } from \"react\";\n\nfunction Medias(props) {\n\n    let medias = props.medias;\n    let mediaFolder = props.name.split(\" \")[0];\n    // IMAGES ARRAY :\n    let images = [];\n    //State that defines whether the lightbox is displayed or not :\n    const [lightboxDisplay, setLightBoxDisplay] = useState(false);\n    //State that defines which image has to be displayed : \n    const [imageToShow, setImageToShow] = useState('');\n\n    return(\n        <>\n            <div className=\"gallery\">\n                {\n                    medias.map((media, index)=> {\n                        if(media.image) {\n                            images.push(process.env.PUBLIC_URL + '/' + mediaFolder + '/' +media.image);\n                            return (\n                                <div key={index} className=\"media\">\n                                    <img src={process.env.PUBLIC_URL + '/' + mediaFolder + '/' +media.image} alt={media.image} />\n                                </div>\n                            )\n                        } else if(media.video) {\n                            images.push(process.env.PUBLIC_URL + '/' + mediaFolder + '/' +media.video);\n                            return (\n                                <div key={index} className=\"media\">\n                                    <video autoPlay muted controls height=\"300\">\n                                        <source src={process.env.PUBLIC_URL + '/' + mediaFolder + '/' + media.video} type=\"video/mp4\" />\n                                        Sorry, your browser doesn't support embedded videos.\n                                    </video>\n                                </div>\n                            )\n                        }\n                    })\n                }     \n                {console.log(images)}\n            </div>\n            { lightboxDisplay ?\n                <div id=\"lightbox\">\n                    <img id=\"lightbox-img\" src={imageToShow}></img>\n                </div>\n            : '' }\n        </>\n    )\n}\n\nexport default Medias;"]},"metadata":{},"sourceType":"module"}