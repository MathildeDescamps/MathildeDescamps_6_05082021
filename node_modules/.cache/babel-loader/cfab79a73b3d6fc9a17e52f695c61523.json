{"ast":null,"code":"var _jsxFileName = \"/Users/mathildedescamps/Documents/Professionnel/Alternance/openclassrooms/P6/fisheye/src/components/Medias.js\",\n    _s = $RefreshSig$();\n\nimport { indexOf } from \"lodash\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Medias(props) {\n  _s();\n\n  let medias = props.medias;\n  let mediaFolder = props.name.split(\" \")[0];\n  let currentIndex;\n  let mediaType; //State that defines whether the lightbox is displayed or not :\n\n  const [lightboxDisplay, setLightBoxDisplay] = useState(false); //State that defines which image has to be displayed : \n\n  const [mediaToShow, setMediaToShow] = useState(''); //DISPLAY THE IMAGE THAT WAS CLICKED\n\n  const showImage = src => {\n    //set imageToShow to be the one that's been clicked on    \n    setMediaToShow(src);\n    mediaType = src.slice(src.length - 4);\n    console.log(mediaType); //set lightbox visibility to true\n\n    setLightBoxDisplay(true);\n  }; //CLOSE THE LIGHBOX :\n\n\n  const hideLightBox = () => {\n    setLightBoxDisplay(false);\n  }; //SHOW NEXT MEDIA :\n\n\n  const showNext = mediaSrc => {\n    //Variables\n    let currentMedia = document.querySelectorAll('.gallery-media');\n    let arrayOfMedias = Array.from(currentMedia);\n    let mediaDisplayed;\n    let nextMedia;\n    let newSrc;\n    console.log('array of medias : ', arrayOfMedias); //We find the media that is currently displayed\n\n    arrayOfMedias.map(media => {\n      if (media.attributes.src && media.attributes.src.nodeValue == mediaSrc) {\n        mediaDisplayed = media;\n        let currentId = parseInt(mediaDisplayed.id);\n        let nextId = currentId + 1;\n        let idToString = nextId.toString();\n        nextMedia = document.getElementById(idToString);\n        console.log(\"next media : \", nextMedia);\n        newSrc = nextMedia.src.substr(21);\n      } //We define the next media to be displayed\n\n\n      setMediaToShow(newSrc);\n      console.log(newSrc);\n    });\n  }; //SHOW PREVIOUS MEDIA :\n\n\n  const showPrevious = mediaSrc => {\n    //Variables\n    let currentMedia = document.querySelectorAll('.gallery-media');\n    let arrayOfMedias = Array.from(currentMedia);\n    let mediaDisplayed;\n    let previousMedia;\n    let newSrc; //We find the media that is currently displayed\n\n    arrayOfMedias.map(media => {\n      if (media.attributes.src && media.attributes.src.nodeValue == mediaSrc) {\n        mediaDisplayed = media;\n        let currentId = parseInt(mediaDisplayed.id);\n        let previousId = currentId - 1;\n        let idToString = previousId.toString();\n        previousMedia = document.getElementById(idToString);\n        newSrc = previousMedia.src.substr(21);\n      } //We define the next media to be displayed\n\n\n      setMediaToShow(newSrc);\n      console.log(newSrc);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery\",\n      children: medias.map((media, index) => {\n        if (media.image) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"media\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: process.env.PUBLIC_URL + '/' + mediaFolder + '/' + media.image,\n              alt: media.image,\n              className: \"gallery-media\",\n              id: index,\n              onClick: () => {\n                showImage(process.env.PUBLIC_URL + '/' + mediaFolder + '/' + media.image);\n                currentIndex = index;\n                console.log('CurrentIndex : ');\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 33\n          }, this);\n        } else if (media.video) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"media\",\n            children: /*#__PURE__*/_jsxDEV(\"video\", {\n              autoPlay: true,\n              type: \"video\",\n              muted: true,\n              controls: true,\n              height: \"300\",\n              className: \"gallery-media\",\n              id: index,\n              onClick: () => {\n                showImage(process.env.PUBLIC_URL + '/' + mediaFolder + '/' + media.video);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"source\", {\n                src: process.env.PUBLIC_URL + '/' + mediaFolder + '/' + media.video,\n                type: \"video/mp4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 41\n              }, this), \"Sorry, your browser doesn't support embedded videos.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 33\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), lightboxDisplay && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"lightbox\",\n      onClick: hideLightBox,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"previous\",\n        onClick: e => {\n          e.stopPropagation();\n          showPrevious(mediaToShow);\n        },\n        children: \"\\u2B60\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media\",\n        children: [\"/* mediaToShow.slice(mediaToShow.length - 4) === '.mp4' ? /* Display video */\", \"/* Display image */\", /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"lightbox-img\",\n          src: mediaToShow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next\",\n        onClick: e => {\n          e.stopPropagation();\n          showNext(mediaToShow);\n        },\n        children: \"\\u2B62\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Medias, \"c7x2qE6uXePBqtA+onbgTaHBlx8=\");\n\n_c = Medias;\nexport default Medias;\n\nvar _c;\n\n$RefreshReg$(_c, \"Medias\");","map":{"version":3,"sources":["/Users/mathildedescamps/Documents/Professionnel/Alternance/openclassrooms/P6/fisheye/src/components/Medias.js"],"names":["indexOf","useState","Medias","props","medias","mediaFolder","name","split","currentIndex","mediaType","lightboxDisplay","setLightBoxDisplay","mediaToShow","setMediaToShow","showImage","src","slice","length","console","log","hideLightBox","showNext","mediaSrc","currentMedia","document","querySelectorAll","arrayOfMedias","Array","from","mediaDisplayed","nextMedia","newSrc","map","media","attributes","nodeValue","currentId","parseInt","id","nextId","idToString","toString","getElementById","substr","showPrevious","previousMedia","previousId","index","image","process","env","PUBLIC_URL","video","e","stopPropagation"],"mappings":"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","sourcesContent":["import { indexOf } from \"lodash\";\nimport { useState } from \"react\";\n\nfunction Medias(props) {\n\n    let medias = props.medias;\n    let mediaFolder = props.name.split(\" \")[0];\n    let currentIndex; \n    let mediaType;\n\n    //State that defines whether the lightbox is displayed or not :\n    const [lightboxDisplay, setLightBoxDisplay] = useState(false);\n    //State that defines which image has to be displayed : \n    const [mediaToShow, setMediaToShow] = useState('');\n\n    //DISPLAY THE IMAGE THAT WAS CLICKED\n    const showImage = (src) => {\n        //set imageToShow to be the one that's been clicked on    \n        setMediaToShow(src);\n        mediaType = src.slice(src.length - 4);\n        console.log(mediaType);\n        //set lightbox visibility to true\n        setLightBoxDisplay(true);\n    };\n\n    //CLOSE THE LIGHBOX :\n    const hideLightBox = () => {\n        setLightBoxDisplay(false)\n    }\n\n    //SHOW NEXT MEDIA :\n    const showNext = (mediaSrc) => {\n        //Variables\n        let currentMedia = document.querySelectorAll('.gallery-media');\n        let arrayOfMedias = Array.from(currentMedia);\n        let mediaDisplayed;\n        let nextMedia;\n        let newSrc;\n        console.log('array of medias : ', arrayOfMedias);\n        //We find the media that is currently displayed\n        arrayOfMedias.map((media)=> {\n            if(media.attributes.src && media.attributes.src.nodeValue == mediaSrc) {\n                mediaDisplayed = media;\n                let currentId = parseInt(mediaDisplayed.id);\n                let nextId = currentId+1;\n                let idToString = nextId.toString();\n                nextMedia = document.getElementById(idToString);\n                console.log(\"next media : \", nextMedia);\n                newSrc = nextMedia.src.substr(21);\n            }\n            //We define the next media to be displayed\n            setMediaToShow(newSrc);\n            console.log(newSrc);\n        })\n    }\n\n    //SHOW PREVIOUS MEDIA :\n    const showPrevious = (mediaSrc) => {\n    //Variables\n        let currentMedia = document.querySelectorAll('.gallery-media');\n        let arrayOfMedias = Array.from(currentMedia);\n        let mediaDisplayed;\n        let previousMedia;\n        let newSrc;\n        //We find the media that is currently displayed\n        arrayOfMedias.map((media)=> {\n            if(media.attributes.src && media.attributes.src.nodeValue == mediaSrc) {\n                mediaDisplayed = media;\n                let currentId = parseInt(mediaDisplayed.id);\n                let previousId = currentId-1;\n                let idToString = previousId.toString();\n                previousMedia = document.getElementById(idToString);\n                newSrc = previousMedia.src.substr(21);\n            }\n            //We define the next media to be displayed\n            setMediaToShow(newSrc);\n            console.log(newSrc);\n        })\n    }\n\n    return(\n        <>\n            <div className=\"gallery\">\n                {   \n                    medias.map((media, index)=> {\n                        if(media.image) {\n                            \n                            return (\n                                <div key={index} className=\"media\">\n                                    <img src={process.env.PUBLIC_URL + '/' + mediaFolder + '/' + media.image} alt={media.image} className=\"gallery-media\" id={index}\n                                        onClick={() => {\n                                            showImage(process.env.PUBLIC_URL + '/' + mediaFolder + '/' + media.image);\n                                            currentIndex = index;\n                                            console.log('CurrentIndex : ');\n                                        }} \n                                    />\n                                </div>\n                            )\n\n                        } else if(media.video) {\n\n                            return (\n                                <div key={index} className=\"media\">\n                                    <video autoPlay type=\"video\" muted controls height=\"300\" className=\"gallery-media\" id={index} onClick={() => {\n                                            showImage(process.env.PUBLIC_URL + '/' + mediaFolder + '/' + media.video);\n                                        }} \n                                    >\n                                        <source src={process.env.PUBLIC_URL + '/' + mediaFolder + '/' + media.video} type=\"video/mp4\" />\n                                        Sorry, your browser doesn't support embedded videos.\n                                    </video>\n                                </div>\n                            )\n\n                        }\n                    })\n                }     \n            </div>\n            { lightboxDisplay &&\n                <div id=\"lightbox\" onClick={hideLightBox}>\n                    <button className=\"previous\" onClick={(e) => {\n                                e.stopPropagation();\n                                showPrevious(mediaToShow);\n                            }} \n                    >\n                        ⭠\n                    </button>\n                    <div className=\"media\">\n                         /* mediaToShow.slice(mediaToShow.length - 4) === '.mp4' ?\n                            /* Display video */ \n                            {/* <video autoPlay muted controls height=\"300\">\n                                <source src={mediaToShow} type=\"video/mp4\" />\n                                Sorry, your browser doesn't support embedded videos.\n                            </video>  \n                         : */}\n                            /* Display image */\n                            <img id=\"lightbox-img\" src={mediaToShow} />\n                        \n                    </div>\n                    <button className=\"next\" onClick={(e) => {\n                                e.stopPropagation();\n                                showNext(mediaToShow);\n                            }} >\n                        ⭢\n                    </button>\n                </div>\n            }\n        </>\n    )\n}\n\nexport default Medias;"]},"metadata":{},"sourceType":"module"}