{"ast":null,"code":"var _jsxFileName = \"/Users/mathildedescamps/Documents/Professionnel/Alternance/openclassrooms/P6/fisheye/src/components/Medias.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Medias(props) {\n  let medias = props.medias;\n  let mediaFolder = props.name.split(\" \")[0];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gallery\",\n    children: medias.map((media, index) => {\n      /*                 if(media.image) {\n       */\n\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        className: \"media\",\n        children: [\"test\", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: process.env.PUBLIC_URL + '/' + mediaFolder + '/' + media.image,\n          alt: media.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 25\n      }, this);\n      /* } else if(media.video) {\n          return (\n              <div key={index} className=\"media\">\n                  <video autoPlay muted controls height=\"300\">\n                      <source src={process.env.PUBLIC_URL + '/' + mediaFolder + '/' + media.video} type=\"video/mp4\" />\n                      Sorry, your browser doesn't support embedded videos.\n                  </video>\n              </div>\n          )\n      } */\n\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Medias;\nexport default Medias;\n\nvar _c;\n\n$RefreshReg$(_c, \"Medias\");","map":{"version":3,"sources":["/Users/mathildedescamps/Documents/Professionnel/Alternance/openclassrooms/P6/fisheye/src/components/Medias.js"],"names":["Medias","props","medias","mediaFolder","name","split","map","media","index","process","env","PUBLIC_URL","image"],"mappings":";;;AAAA,SAASA,MAAT,CAAgBC,KAAhB,EAAuB;AAEnB,MAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;AACA,MAAIC,WAAW,GAAGF,KAAK,CAACG,IAAN,CAAWC,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAAlB;AAEA,sBAEI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,cAEIH,MAAM,CAACI,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAiB;AACxC;AACA;;AACwB;AAAA;AAAiB,QAAA,SAAS,EAAC,OAA3B;AAAA,wCAEI;AAAK,UAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,GAAzB,GAA+BR,WAA/B,GAA6C,GAA7C,GAAmDI,KAAK,CAACK,KAAnE;AAA0E,UAAA,GAAG,EAAEL,KAAK,CAACK;AAArF;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,SAAUJ,KAAV;AAAA;AAAA;AAAA;AAAA;AAKR;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACa,KAlBD;AAFJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAyBH;;KA9BQR,M;AAgCT,eAAeA,MAAf","sourcesContent":["function Medias(props) {\n\n    let medias = props.medias;\n    let mediaFolder = props.name.split(\" \")[0];\n\n    return(\n            \n        <div className=\"gallery\">\n            {\n            medias.map((media, index)=> {\n/*                 if(media.image) {\n */                    \n                        <div key={index} className=\"media\">\n                            test\n                            <img src={process.env.PUBLIC_URL + '/' + mediaFolder + '/' + media.image} alt={media.image} />\n                        </div>\n                    \n                /* } else if(media.video) {\n                    return (\n                        <div key={index} className=\"media\">\n                            <video autoPlay muted controls height=\"300\">\n                                <source src={process.env.PUBLIC_URL + '/' + mediaFolder + '/' + media.video} type=\"video/mp4\" />\n                                Sorry, your browser doesn't support embedded videos.\n                            </video>\n                        </div>\n                    )\n                } */\n            })}\n        </div>\n    )\n}\n\nexport default Medias;"]},"metadata":{},"sourceType":"module"}