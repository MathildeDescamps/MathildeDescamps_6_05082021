[{"/Users/mathildedescamps/Documents/Professionnel/Alternance/openclassrooms/P6/fisheye/src/index.js":"1","/Users/mathildedescamps/Documents/Professionnel/Alternance/openclassrooms/P6/fisheye/src/components/App.js":"2","/Users/mathildedescamps/Documents/Professionnel/Alternance/openclassrooms/P6/fisheye/src/components/Header.js":"3","/Users/mathildedescamps/Documents/Professionnel/Alternance/openclassrooms/P6/fisheye/src/components/Photographes.js":"4","/Users/mathildedescamps/Documents/Professionnel/Alternance/openclassrooms/P6/fisheye/src/data/data.js":"5","/Users/mathildedescamps/Documents/Professionnel/Alternance/openclassrooms/P6/fisheye/src/components/Photograph.js":"6","/Users/mathildedescamps/Documents/Professionnel/Alternance/openclassrooms/P6/fisheye/src/components/Banner.js":"7","/Users/mathildedescamps/Documents/Professionnel/Alternance/openclassrooms/P6/fisheye/src/components/Intro.js":"8","/Users/mathildedescamps/Documents/Professionnel/Alternance/openclassrooms/P6/fisheye/src/components/Gallery.js":"9","/Users/mathildedescamps/Documents/Professionnel/Alternance/openclassrooms/P6/fisheye/src/components/Medias.js":"10","/Users/mathildedescamps/Documents/Professionnel/Alternance/openclassrooms/P6/fisheye/src/components/GalleryLightbox.js":"11","/Users/mathildedescamps/Documents/Professionnel/Alternance/openclassrooms/P6/fisheye/src/components/Sticker.js":"12"},{"size":232,"mtime":1630589445982,"results":"13","hashOfConfig":"14"},{"size":843,"mtime":1633270731567,"results":"15","hashOfConfig":"14"},{"size":607,"mtime":1629477449717,"results":"16","hashOfConfig":"14"},{"size":1732,"mtime":1632474479329,"results":"17","hashOfConfig":"14"},{"size":15519,"mtime":1633272919374,"results":"18","hashOfConfig":"14"},{"size":721,"mtime":1633272464518,"results":"19","hashOfConfig":"14"},{"size":305,"mtime":1631881354280,"results":"20","hashOfConfig":"14"},{"size":2144,"mtime":1633708854798,"results":"21","hashOfConfig":"14"},{"size":1572,"mtime":1633272520851,"results":"22","hashOfConfig":"14"},{"size":8325,"mtime":1634478148251,"results":"23","hashOfConfig":"14"},{"size":212,"mtime":1633007884020,"results":"24","hashOfConfig":"14"},{"size":872,"mtime":1633272794902,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"swfm0y",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},"/Users/mathildedescamps/Documents/Professionnel/Alternance/openclassrooms/P6/fisheye/src/index.js",[],["55","56"],"/Users/mathildedescamps/Documents/Professionnel/Alternance/openclassrooms/P6/fisheye/src/components/App.js",[],"/Users/mathildedescamps/Documents/Professionnel/Alternance/openclassrooms/P6/fisheye/src/components/Header.js",[],"/Users/mathildedescamps/Documents/Professionnel/Alternance/openclassrooms/P6/fisheye/src/components/Photographes.js",[],"/Users/mathildedescamps/Documents/Professionnel/Alternance/openclassrooms/P6/fisheye/src/data/data.js",[],"/Users/mathildedescamps/Documents/Professionnel/Alternance/openclassrooms/P6/fisheye/src/components/Photograph.js",["57","58","59"],"import Intro from './Intro';\nimport Gallery from './Gallery';\n\nfunction Photograph(props) {\n\n    let idUrl = window.location.pathname.slice(9);\n    let photographers = props.photographers;\n    let medias = props.medias;\n    let profile;\n    let profileId;\n    let i;\n\n    photographers.map((photograph, index) => {\n        if(photograph.id.toString() == idUrl) {\n            profile = photograph;\n            i = index;\n            profileId = profile.id;\n        }\n    })\n    return (\n        <div className=\"profilePage\">\n            <Intro url={props.url} profile={profile} index={i}/>\n            <Gallery profileId={profile.id} profile={profile} medias={medias} />\n        </div>\n    );\n}\n\nexport default Photograph;","/Users/mathildedescamps/Documents/Professionnel/Alternance/openclassrooms/P6/fisheye/src/components/Banner.js",[],"/Users/mathildedescamps/Documents/Professionnel/Alternance/openclassrooms/P6/fisheye/src/components/Intro.js",[],"/Users/mathildedescamps/Documents/Professionnel/Alternance/openclassrooms/P6/fisheye/src/components/Gallery.js",["60"],"import { useState } from \"react\";\nimport * as _ from \"lodash\";\nimport Medias from \"./Medias\";\nimport Sticker from './Sticker';\n\nfunction Gallery(props) {\n\n    let medias = props.medias;\n    //Le filtre est sur 'popularité' par défaut :\n    const [filter, setFilter] = useState('likes');\n    //On ordonne les médias du plus populaire au moins populaire :\n    const [items, setItems] = useState(_.orderBy([...medias.filter(media => media.photographerId == props.profileId)], ['likes'], 'desc'));\n    \n    return(\n        <>\n            <div className=\"gallery-wrapper\">\n                <div className=\"filter\">\n                    <p>Trier par</p> \n                    <select \n                        id=\"filter\" \n                        value={filter} \n                        //Quand le filtre change, on met à jour l'odre des medias:\n                        onChange={e => {\n                            setFilter(e.target.value);\n                            setItems(_.orderBy([...items], [e.target.value], filter === 'title' ? 'asc' : 'desc'));\n                        }}\n                    >\n                        <option value='likes' defaultValue>Popularité</option>\n                        <option value='date'>Date</option>\n                        <option value='title'>Titre</option>\n                    </select>\n                </div>\n            <Medias profile={props.profile} name={props.profile.name} medias={items} />\n            </div>\n            <Sticker income={props.profile.price} medias={items}/>\n        </>\n    )\n}\n\nexport default Gallery;","/Users/mathildedescamps/Documents/Professionnel/Alternance/openclassrooms/P6/fisheye/src/components/Medias.js",["61","62","63","64","65","66","67","68","69","70","71","72","73","74","75"],"import { indexOf } from \"lodash\";\nimport { useState } from \"react\";\n\nfunction Medias(props) {\n\n    let medias = props.medias;\n    let mediaFolder = props.name.split(\" \")[0];\n    let currentIndex; \n    let mediaType;\n    let videoType;\n\n    //State that defines whether the lightbox is displayed or not :\n    const [lightboxDisplay, setLightBoxDisplay] = useState(false);\n    //State that defines which image has to be displayed : \n    const [mediaToShow, setMediaToShow] = useState('');\n\n    //DISPLAY THE IMAGE THAT WAS CLICKED\n    const showImage = (src) => {\n        //set imageToShow to be the one that's been clicked on    \n        setMediaToShow(src);\n        mediaType = src.slice(src.length - 4);\n        //set lightbox visibility to true\n        setLightBoxDisplay(true);\n    };\n\n    //CLOSE THE LIGHBOX :\n    const hideLightBox = () => {\n        setLightBoxDisplay(false)\n    }\n\n    //SHOW NEXT MEDIA :\n    const showNext = (mediaSrc) => {\n        //Variables\n        let currentMedia = document.querySelectorAll('.gallery-media');\n        let arrayOfMedias = Array.from(currentMedia);\n        let mediaDisplayed;\n        let nextMedia;\n        let newSrc;\n        //We find the media that is currently displayed\n        arrayOfMedias.map((media)=> {\n            console.log(media.nodeName);\n            //Find the media that is currently displayed : \n            //If it's an image :\n            if(media.nodeName == 'IMG' && media.attributes.src && media.attributes.src.nodeValue == mediaSrc) {\n                mediaDisplayed = media;\n                let currentId = parseInt(mediaDisplayed.id);\n                let nextId = currentId+1;\n                let idToString = nextId.toString();\n                nextMedia = document.getElementById(idToString);\n                if(nextMedia === null) {\n                    hideLightBox()\n                } else if (nextMedia.nodeName == \"IMG\") {\n                    newSrc = nextMedia.src.substr(21);\n                    //We define the next media to be displayed\n                    setMediaToShow(newSrc);\n                } else if (nextMedia.nodeName == \"VIDEO\") {\n                    let videoSrc = document.querySelector(nextMedia.className + 'source');\n                    console.log('next media is a video !', nextMedia);\n                    hideLightBox();\n                }\n            }\n\n            /* if(media.attributes.src && media.attributes.src.nodeValue == mediaSrc) {\n                mediaDisplayed = media;\n                let currentId = parseInt(mediaDisplayed.id);\n                let nextId = currentId+1;\n                let idToString = nextId.toString();\n                nextMedia = document.getElementById(idToString);\n                if(nextMedia === null) {\n                    hideLightBox()\n                } else {\n                    newSrc = nextMedia.src.substr(21);\n                    //We define the next media to be displayed\n                    setMediaToShow(newSrc);\n                } \n            } */\n        })\n    }\n\n    //SHOW PREVIOUS MEDIA :\n    const showPrevious = (mediaSrc) => {\n    //Variables\n        let currentMedia = document.querySelectorAll('.gallery-media');\n        let videos = document.querySelectorAll('.gallery-media source')\n        let arrayOfMedias = Array.from(currentMedia);\n        let arrayOfVideos = Array.from(videos);\n        let mediaDisplayed;\n        let previousMedia;\n        let newSrc;\n        //We find the media that is currently displayed\n        arrayOfMedias.map((media)=> {\n            if(media.attributes.src && media.attributes.src.nodeValue == mediaSrc) {\n                mediaDisplayed = media;\n                let currentId = parseInt(mediaDisplayed.id);\n                let previousId = currentId-1;\n                //If the displayed image is the first one, we close the modal on click on the previous button.\n                if(currentId === 0) {\n                    hideLightBox();\n                }\n                else {\n                    let idToString = previousId.toString();\n                    previousMedia = document.getElementById(idToString);\n                    newSrc = previousMedia.src.substr(21);\n                    //We define the next media to be displayed\n                    setMediaToShow(newSrc);\n                }\n            }\n        })\n    }\n\n    return(\n        <>\n            <div className=\"gallery\">\n                {   \n                    medias.map((media, index)=> {\n                        if(media.image) {\n                            \n                            return (\n                                <div key={index} className=\"media\">\n                                    <img src={process.env.PUBLIC_URL + '/' + mediaFolder + '/' + media.image} alt={media.image} className=\"gallery-media\" id={index}\n                                        onClick={() => {\n                                            showImage(process.env.PUBLIC_URL + '/' + mediaFolder + '/' + media.image);\n                                            currentIndex = index;\n                                        }} \n                                    />\n                                </div>\n                            )\n\n                        } else if(media.video) {\n\n                            return (\n                                <div key={index} className=\"media\">\n                                    <video autoPlay type=\"video\" controls height=\"300\" className=\"gallery-media\" id={index} onClick={() => {\n                                            showImage(process.env.PUBLIC_URL + '/' + mediaFolder + '/' + media.video);\n                                        }} \n                                    >\n                                        <source src={process.env.PUBLIC_URL + '/' + mediaFolder + '/' + media.video} type=\"video/mp4\" />\n                                        Sorry, your browser doesn't support embedded videos.\n                                    </video>\n                                </div>\n                            )\n\n                        }\n                    })\n                }     \n            </div>\n            { lightboxDisplay &&\n                <div id=\"lightbox\">\n                    <svg className=\"cross-icon\" onClick={hideLightBox} width=\"25\" height=\"25\" viewBox=\"0 0 42 42\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M42 4.23L37.77 0L21 16.77L4.23 0L0 4.23L16.77 21L0 37.77L4.23 42L21 25.23L37.77 42L42 37.77L25.23 21L42 4.23Z\" fill=\"#ae2424\"/>\n                    </svg>\n\n                    <button className=\"previous\" onClick={(e) => {\n                                e.stopPropagation();\n                                showPrevious(mediaToShow);\n                            }} \n                    >\n                        <svg width=\"25\" viewBox=\"0 0 30 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M29.6399 42.36L11.3199 24L29.6399 5.64L23.9999 -2.46532e-07L-0.000107861 24L23.9999 48L29.6399 42.36Z\" fill=\"#ae2424\"/>\n                        </svg>\n                    </button>\n                    <div className=\"media\">\n                        {console.log('media to show :', mediaToShow)}\n                        {mediaToShow.slice(mediaToShow.length -4) === '.mp4' ?\n                            <video autoPlay muted controls height=\"300\">\n                                <source src={mediaToShow} type=\"video/mp4\" />\n                                Sorry, your browser doesn't support embedded videos.\n                            </video>\n                        :\n                            <img id=\"lightbox-img\" src={mediaToShow} />\n                        }\n                </div>\n                    <button className=\"next\" onClick={(e) => {\n                                e.stopPropagation();\n                                showNext(mediaToShow);\n                            }} >\n                        <svg width=\"25\" viewBox=\"0 0 30 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M0.360108 5.64L18.6801 24L0.360107 42.36L6.00011 48L30.0001 24L6.00011 3.88195e-06L0.360108 5.64Z\" fill=\"#ae2424\"/>\n                        </svg>\n                    </button>\n                </div>\n            }\n        </>\n    )\n}\n\nexport default Medias;","/Users/mathildedescamps/Documents/Professionnel/Alternance/openclassrooms/P6/fisheye/src/components/GalleryLightbox.js",[],"/Users/mathildedescamps/Documents/Professionnel/Alternance/openclassrooms/P6/fisheye/src/components/Sticker.js",["76"],"function Sticker(props) {\n\n    let totalLikes = 0;\n    props.medias.map((media) => {\n        totalLikes = totalLikes + media.likes;\n    })\n\n    return (\n        <div className=\"sticker-wrapper\">\n            <div className=\"sticker\">\n                <p className=\"likes\">\n                    {totalLikes}\n                    <span>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20px\" viewBox=\"0 0 24 24\" width=\"20px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"/></svg>\n                    </span>\n                </p>\n                <p className=\"income\">{props.income}€ / jour</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Sticker;",{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":10,"column":9,"nodeType":"83","messageId":"84","endLine":10,"endColumn":18},{"ruleId":"85","severity":1,"message":"86","line":13,"column":43,"nodeType":"87","messageId":"88","endLine":13,"endColumn":45},{"ruleId":"89","severity":1,"message":"90","line":14,"column":37,"nodeType":"91","messageId":"92","endLine":14,"endColumn":39},{"ruleId":"89","severity":1,"message":"90","line":12,"column":98,"nodeType":"91","messageId":"92","endLine":12,"endColumn":100},{"ruleId":"81","severity":1,"message":"93","line":1,"column":10,"nodeType":"83","messageId":"84","endLine":1,"endColumn":17},{"ruleId":"81","severity":1,"message":"94","line":8,"column":9,"nodeType":"83","messageId":"84","endLine":8,"endColumn":21},{"ruleId":"81","severity":1,"message":"95","line":9,"column":9,"nodeType":"83","messageId":"84","endLine":9,"endColumn":18},{"ruleId":"81","severity":1,"message":"96","line":10,"column":9,"nodeType":"83","messageId":"84","endLine":10,"endColumn":18},{"ruleId":"85","severity":1,"message":"86","line":40,"column":34,"nodeType":"87","messageId":"88","endLine":40,"endColumn":36},{"ruleId":"89","severity":1,"message":"90","line":44,"column":31,"nodeType":"91","messageId":"92","endLine":44,"endColumn":33},{"ruleId":"89","severity":1,"message":"90","line":44,"column":98,"nodeType":"91","messageId":"92","endLine":44,"endColumn":100},{"ruleId":"89","severity":1,"message":"90","line":52,"column":47,"nodeType":"91","messageId":"92","endLine":52,"endColumn":49},{"ruleId":"89","severity":1,"message":"90","line":56,"column":47,"nodeType":"91","messageId":"92","endLine":56,"endColumn":49},{"ruleId":"81","severity":1,"message":"97","line":57,"column":25,"nodeType":"83","messageId":"84","endLine":57,"endColumn":33},{"ruleId":"81","severity":1,"message":"98","line":86,"column":13,"nodeType":"83","messageId":"84","endLine":86,"endColumn":26},{"ruleId":"85","severity":1,"message":"86","line":91,"column":34,"nodeType":"87","messageId":"88","endLine":91,"endColumn":36},{"ruleId":"89","severity":1,"message":"90","line":92,"column":71,"nodeType":"91","messageId":"92","endLine":92,"endColumn":73},{"ruleId":"85","severity":1,"message":"99","line":115,"column":46,"nodeType":"87","messageId":"100","endLine":115,"endColumn":48},{"ruleId":"101","severity":1,"message":"102","line":170,"column":29,"nodeType":"103","endLine":170,"endColumn":72},{"ruleId":"85","severity":1,"message":"86","line":4,"column":30,"nodeType":"87","messageId":"88","endLine":4,"endColumn":32},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'profileId' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'indexOf' is defined but never used.","'currentIndex' is assigned a value but never used.","'mediaType' is assigned a value but never used.","'videoType' is defined but never used.","'videoSrc' is assigned a value but never used.","'arrayOfVideos' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]