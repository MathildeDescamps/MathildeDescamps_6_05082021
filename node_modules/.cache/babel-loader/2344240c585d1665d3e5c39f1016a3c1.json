{"ast":null,"code":"var _jsxFileName = \"/Users/mathildedescamps/Documents/Professionnel/Alternance/openclassrooms/P6/fisheye/src/components/Medias.js\",\n    _s = $RefreshSig$();\n\nimport { indexOf } from \"lodash\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Medias(props) {\n  _s();\n\n  let medias = props.medias;\n  let mediaFolder = props.name.split(\" \")[0];\n  let currentIndex; //State that defines whether the lightbox is displayed or not :\n\n  const [lightboxDisplay, setLightBoxDisplay] = useState(false); //State that defines which image has to be displayed : \n\n  const [mediaToShow, setMediaToShow] = useState('');\n\n  const showImage = src => {\n    //set imageToShow to be the one that's been clicked on    \n    setMediaToShow(src); //set lightbox visibility to true\n\n    setLightBoxDisplay(true);\n  }; //Close the lightbox :\n\n\n  const hideLightBox = () => {\n    setLightBoxDisplay(false);\n  }; //Show next media :\n\n\n  const showNext = mediaSrc => {\n    console.log(mediaSrc);\n    let currentMedia = document.querySelectorAll('.gallery-img');\n    let arrayOfMedias = Array.from(currentMedia);\n    let mediaDisplayed;\n    console.log(arrayOfMedias);\n    arrayOfMedias.map(media => {\n      if (media.attributes.src.nodeValue == mediaSrc) {\n        mediaDisplayed = media;\n        console.log(mediaDisplayed);\n      }\n    }); //let nextMedia = medias[index == currentIndex]+1;\n\n    /* console.log(nextMedia);\n    setMediaToShow(nextMedia); */\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery\",\n      children: medias.map((media, index) => {\n        if (media.image) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"media\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: process.env.PUBLIC_URL + '/' + mediaFolder + '/' + media.image,\n              alt: media.image,\n              className: \"gallery-img\",\n              onClick: () => {\n                showImage(process.env.PUBLIC_URL + '/' + mediaFolder + '/' + media.image);\n                currentIndex = index;\n                console.log('CurrentIndex : ');\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this);\n        } else if (media.video) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"media\",\n            children: /*#__PURE__*/_jsxDEV(\"video\", {\n              autoPlay: true,\n              muted: true,\n              controls: true,\n              height: \"300\",\n              onClick: () => {\n                showImage(process.env.PUBLIC_URL + '/' + mediaFolder + '/' + media.video);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"source\", {\n                src: process.env.PUBLIC_URL + '/' + mediaFolder + '/' + media.video,\n                type: \"video/mp4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 41\n              }, this), \"Sorry, your browser doesn't support embedded videos.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 33\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), lightboxDisplay ? /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"lightbox\",\n      onClick: hideLightBox,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\u2B60\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"lightbox-img\",\n          src: mediaToShow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          e.stopPropagation();\n          showNext(mediaToShow);\n        },\n        children: \"\\u2B62\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this) : '']\n  }, void 0, true);\n}\n\n_s(Medias, \"c7x2qE6uXePBqtA+onbgTaHBlx8=\");\n\n_c = Medias;\nexport default Medias;\n\nvar _c;\n\n$RefreshReg$(_c, \"Medias\");","map":{"version":3,"sources":["/Users/mathildedescamps/Documents/Professionnel/Alternance/openclassrooms/P6/fisheye/src/components/Medias.js"],"names":["indexOf","useState","Medias","props","medias","mediaFolder","name","split","currentIndex","lightboxDisplay","setLightBoxDisplay","mediaToShow","setMediaToShow","showImage","src","hideLightBox","showNext","mediaSrc","console","log","currentMedia","document","querySelectorAll","arrayOfMedias","Array","from","mediaDisplayed","map","media","attributes","nodeValue","index","image","process","env","PUBLIC_URL","video","e","stopPropagation"],"mappings":"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","sourcesContent":["import { indexOf } from \"lodash\";\nimport { useState } from \"react\";\n\nfunction Medias(props) {\n\n    let medias = props.medias;\n    let mediaFolder = props.name.split(\" \")[0];\n    let currentIndex; \n\n    //State that defines whether the lightbox is displayed or not :\n    const [lightboxDisplay, setLightBoxDisplay] = useState(false);\n    //State that defines which image has to be displayed : \n    const [mediaToShow, setMediaToShow] = useState('');\n\n    const showImage = (src) => {\n        //set imageToShow to be the one that's been clicked on    \n        setMediaToShow(src);\n        //set lightbox visibility to true\n        setLightBoxDisplay(true);\n    };\n    //Close the lightbox :\n    const hideLightBox = () => {\n        setLightBoxDisplay(false)\n    }\n    //Show next media :\n    const showNext = (mediaSrc) => {\n        console.log(mediaSrc);\n        let currentMedia = document.querySelectorAll('.gallery-img');\n        let arrayOfMedias = Array.from(currentMedia);\n        let mediaDisplayed;\n        console.log(arrayOfMedias);\n        arrayOfMedias.map((media)=> {\n            if(media.attributes.src.nodeValue == mediaSrc) {\n                mediaDisplayed = media;\n                console.log(mediaDisplayed);\n            }\n        })\n        //let nextMedia = medias[index == currentIndex]+1;\n        /* console.log(nextMedia);\n        setMediaToShow(nextMedia); */\n    }\n\n    return(\n        <>\n            <div className=\"gallery\">\n                {   \n                    medias.map((media, index)=> {\n                        if(media.image) {\n                            \n                            return (\n                                <div key={index} className=\"media\">\n                                    <img src={process.env.PUBLIC_URL + '/' + mediaFolder + '/' + media.image} alt={media.image} className=\"gallery-img\"\n                                        onClick={() => {\n                                            showImage(process.env.PUBLIC_URL + '/' + mediaFolder + '/' + media.image);\n                                            currentIndex = index;\n                                            console.log('CurrentIndex : ');\n                                        }} \n                                    />\n                                </div>\n                            )\n\n                        } else if(media.video) {\n\n                            return (\n                                <div key={index} className=\"media\">\n                                    <video autoPlay muted controls height=\"300\" onClick={() => {\n                                            showImage(process.env.PUBLIC_URL + '/' + mediaFolder + '/' + media.video);\n                                        }} \n                                    >\n                                        <source src={process.env.PUBLIC_URL + '/' + mediaFolder + '/' + media.video} type=\"video/mp4\" />\n                                        Sorry, your browser doesn't support embedded videos.\n                                    </video>\n                                </div>\n                            )\n\n                        }\n                    })\n                }     \n            </div>\n            { lightboxDisplay ?\n                <div id=\"lightbox\" onClick={hideLightBox}>\n                    <button>⭠</button>\n                    <div className=\"media\">\n                        <img id=\"lightbox-img\" src={mediaToShow} />\n                    </div>\n                    <button onClick={(e) => {\n                                e.stopPropagation();\n                                showNext(mediaToShow);\n                            }} >\n                        ⭢\n                    </button>\n                </div>\n            : '' }\n        </>\n    )\n}\n\nexport default Medias;"]},"metadata":{},"sourceType":"module"}