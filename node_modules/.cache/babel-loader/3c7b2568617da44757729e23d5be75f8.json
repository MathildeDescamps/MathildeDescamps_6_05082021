{"ast":null,"code":"var _jsxFileName = \"/Users/mathildedescamps/Documents/Professionnel/Alternance/openclassrooms/P6/fisheye/src/components/Medias.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Medias(props) {\n  _s();\n\n  let medias = props.medias;\n  let mediaFolder = props.name.split(\" \")[0]; // IMAGES ARRAY :\n\n  let images = []; //State that defines whether the lightbox is displayed or not :\n\n  const [lightboxDisplay, setLightBoxDisplay] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery\",\n      children: [medias.map((media, index) => {\n        if (media.image) {\n          images.push(process.env.PUBLIC_URL + '/' + mediaFolder + '/' + media.image);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"media\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: process.env.PUBLIC_URL + '/' + mediaFolder + '/' + media.image,\n              alt: media.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 33\n          }, this);\n        } else if (media.video) {\n          images.push(process.env.PUBLIC_URL + '/' + mediaFolder + '/' + media.video);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"media\",\n            children: /*#__PURE__*/_jsxDEV(\"video\", {\n              autoPlay: true,\n              muted: true,\n              controls: true,\n              height: \"300\",\n              children: [/*#__PURE__*/_jsxDEV(\"source\", {\n                src: process.env.PUBLIC_URL + '/' + mediaFolder + '/' + media.video,\n                type: \"video/mp4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 41\n              }, this), \"Sorry, your browser doesn't support embedded videos.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 33\n          }, this);\n        }\n      }), console.log(images)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Medias, \"H7mdezPstlyM6vJFCwwzpcZfMDw=\");\n\n_c = Medias;\nexport default Medias;\n\nvar _c;\n\n$RefreshReg$(_c, \"Medias\");","map":{"version":3,"sources":["/Users/mathildedescamps/Documents/Professionnel/Alternance/openclassrooms/P6/fisheye/src/components/Medias.js"],"names":["useState","Medias","props","medias","mediaFolder","name","split","images","lightboxDisplay","setLightBoxDisplay","map","media","index","image","push","process","env","PUBLIC_URL","video","console","log"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAEnB,MAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;AACA,MAAIC,WAAW,GAAGF,KAAK,CAACG,IAAN,CAAWC,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAAlB,CAHmB,CAInB;;AACA,MAAIC,MAAM,GAAG,EAAb,CALmB,CAMnB;;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,KAAD,CAAtD;AAEA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,iBAEQG,MAAM,CAACO,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAiB;AACxB,YAAGD,KAAK,CAACE,KAAT,EAAgB;AACZN,UAAAA,MAAM,CAACO,IAAP,CAAYC,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,GAAzB,GAA+Bb,WAA/B,GAA6C,GAA7C,GAAkDO,KAAK,CAACE,KAApE;AACA,8BACI;AAAiB,YAAA,SAAS,EAAC,OAA3B;AAAA,mCACI;AAAK,cAAA,GAAG,EAAEE,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,GAAzB,GAA+Bb,WAA/B,GAA6C,GAA7C,GAAkDO,KAAK,CAACE,KAAlE;AAAyE,cAAA,GAAG,EAAEF,KAAK,CAACE;AAApF;AAAA;AAAA;AAAA;AAAA;AADJ,aAAUD,KAAV;AAAA;AAAA;AAAA;AAAA,kBADJ;AAKH,SAPD,MAOO,IAAGD,KAAK,CAACO,KAAT,EAAgB;AACnBX,UAAAA,MAAM,CAACO,IAAP,CAAYC,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,GAAzB,GAA+Bb,WAA/B,GAA6C,GAA7C,GAAkDO,KAAK,CAACO,KAApE;AACA,8BACI;AAAiB,YAAA,SAAS,EAAC,OAA3B;AAAA,mCACI;AAAO,cAAA,QAAQ,MAAf;AAAgB,cAAA,KAAK,MAArB;AAAsB,cAAA,QAAQ,MAA9B;AAA+B,cAAA,MAAM,EAAC,KAAtC;AAAA,sCACI;AAAQ,gBAAA,GAAG,EAAEH,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,GAAzB,GAA+Bb,WAA/B,GAA6C,GAA7C,GAAmDO,KAAK,CAACO,KAAtE;AAA6E,gBAAA,IAAI,EAAC;AAAlF;AAAA;AAAA;AAAA;AAAA,sBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,aAAUN,KAAV;AAAA;AAAA;AAAA;AAAA,kBADJ;AAQH;AACJ,OAnBD,CAFR,EAuBKO,OAAO,CAACC,GAAR,CAAYb,MAAZ,CAvBL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AA6BH;;GAtCQN,M;;KAAAA,M;AAwCT,eAAeA,MAAf","sourcesContent":["import { useState } from \"react\";\n\nfunction Medias(props) {\n\n    let medias = props.medias;\n    let mediaFolder = props.name.split(\" \")[0];\n    // IMAGES ARRAY :\n    let images = [];\n    //State that defines whether the lightbox is displayed or not :\n    const [lightboxDisplay, setLightBoxDisplay] = useState(false);\n\n    return(\n        <>\n            <div className=\"gallery\">\n                {\n                    medias.map((media, index)=> {\n                        if(media.image) {\n                            images.push(process.env.PUBLIC_URL + '/' + mediaFolder + '/' +media.image);\n                            return (\n                                <div key={index} className=\"media\">\n                                    <img src={process.env.PUBLIC_URL + '/' + mediaFolder + '/' +media.image} alt={media.image} />\n                                </div>\n                            )\n                        } else if(media.video) {\n                            images.push(process.env.PUBLIC_URL + '/' + mediaFolder + '/' +media.video);\n                            return (\n                                <div key={index} className=\"media\">\n                                    <video autoPlay muted controls height=\"300\">\n                                        <source src={process.env.PUBLIC_URL + '/' + mediaFolder + '/' + media.video} type=\"video/mp4\" />\n                                        Sorry, your browser doesn't support embedded videos.\n                                    </video>\n                                </div>\n                            )\n                        }\n                    })\n                }     \n                {console.log(images)}\n            </div>\n        </>\n    )\n}\n\nexport default Medias;"]},"metadata":{},"sourceType":"module"}